pipeline {
    agent any
    environment {
        CHAPTER = 'Chapter-13'
        ECRURL = 'http://633393569065.dkr.ecr.eu-central-1.amazonaws.com'
        ECRCRED = 'ecr:eu-central-1:ecr-credentials'
    }

    stages {
        stage('Build') {
            steps {
                echo "Building"
                checkout scm
            }
        }
        stage('Style') {
            agent {
                docker 'python:3'
            }

            steps {
                sh '''
                    #!/bin/bash

                    cd "${CHAPTER}"
                    python -m pip install -r requirements.txt
                    cd Flask-YouTube
                    python setup.py build
                    python setup.py install
                    cd ..
                    python -m pip install flake8
                    flake8 --max-line-length 120 webapp
                '''
            }
        }
        stage('Test') {
            agent {
                docker 'python:3'
            }
            steps {
                sh '''
                    #!/bin/bash

                    cd "${CHAPTER}"
                    python -m pip install -r requirements.txt
                    cd Flask-YouTube
                    python setup.py build
                    python setup.py install
                    cd ..
                    python -m pip install coverage
                    coverage run --source webapp --branch -m unittest tests.test_urls.TestURLs
                    coverage report
                '''
            }
       }
       stage('Build docker images') {
           agent any
           steps {
               echo 'Creating new images...'
               script {
                    def frontend = docker.build("myblog:${env.BUILD_ID}", "-f ${CHAPTER}/deploy/docker/Dockerfile_frontend ${CHAPTER}")
                    def worker = docker.build("myblog_worker:${env.BUILD_ID}", "-f ${CHAPTER}/deploy/docker/Dockerfile_worker ${CHAPTER}")
               }
           }
       }
       stage('Publish Docker Image Development') {
           agent any
           steps {
               echo 'Publising new images...'
               when {
                   branch 'develop'
               }
               script {
                   docker.withRegistry(ECRURL, ECRCRED)
                   {
                       docker.image("dev/myblog:${env.BUILD_ID}").push()
                       docker.image("dev/myblog_worker:${env.BUILD_ID}").push()
                   }
               }
           }
       }
       stage('Publish Docker Image Production') {
           agent any
           steps {
               echo 'Publising new images...'
               when {
                   branch 'master'
               }
               script {
                   docker.withRegistry(ECRURL, ECRCRED)
                   {
                       docker.image("prod/myblog:${env.BUILD_ID}").push()
                       docker.image("prod/myblog_worker:${env.BUILD_ID}").push()
                   }
               }
           }
       }
    }
}
